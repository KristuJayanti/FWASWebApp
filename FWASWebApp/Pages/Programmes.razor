@using FWASWebApp.Services
@using FWASWebApp.ResponseModels.Manager
@using FWASWebApp.Services.ManagerApi
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage;
@inject NavigationManager NavigationManager;

<style>
    .waiting {
    	background: repeating-linear-gradient(to left, #fff, #ddd);
    	animation: load 5s linear infinite forwards;
    	background-size: 200% auto;
    }
    	
    @@keyframes load {
        0% { background-position: -200% 0; }
      100% { background-position: 0 0; }
    }
    
    .card-container {
        position: relative;
        width: 15rem;
        height: 15rem;
    }
    
    .bottom-display {
        position: absolute;
        bottom: 0.7rem;
        right: 0.7rem;
    }
    
    .prompt {
        font-size: 20px;
    }
                   
    .prompt > * {
        margin: 0.5rem 0;
        padding: 0.5rem 0;
    }
    
    .pickbox {
        font-size: 14px; 
        border: 1px solid black; 
        border-radius: 2px;
        display: inline-flex; 
        background: #ccc;
        padding: 2px;
    }
    
    .pickbox .remove {
        margin-left: 2px;
        width: 12px;
        height: 12px;
        display: inline-block;
    }
    
    .info-card {
        padding: 4px;
        border: 2px solid #005a9e;
        background: #9fd3e3;
        border-radius: 4px;
    }
</style>

<h1 style='padding-left: 10vw;'>Programmes</h1>

@* Placeholder loading *@
<div style="display: @(_session == null ? "block" : "none"); margin-left: 10vw;">
    <CardLayout ChildrenHeight="10rem"
                ChildrenWidth="15rem">
        <Card>
            <div class="waiting" style="width: 10rem; height: 2rem;"></div>
            <div class="waiting" style="width: 8rem; height: 1rem; padding-left: 1rem; margin-top: 1rem;"></div>
        </Card>
        <Card>
            <div class="waiting" style="width: 10rem; height: 2rem;"></div>
            <div class="waiting" style="width: 8rem; height: 1rem; padding-left: 1rem; margin-top: 1rem;"></div>
        </Card>
    </CardLayout>
</div>

@* actual logic *@

<div style="display: @(_session == null ? "none" : "block"); margin-left: 10vw;">

    <CardLayout ChildrenHeight="10rem"
                ChildrenWidth="15rem">
        @if (_programmes != null) {
            foreach (var programme in _programmes) {
                <Card>
                    <div class="card-container" @onclick="@(() => EditWindow(programme))">
                        <h2>@programme.programmeName</h2>
                        <h3 style="font-weight: normal">@(programme.workingHoursPerWeek ?? 0) hours/wk</h3>
                        <div style="font-weight: normal" class="bottom-display">

                            @if (programme.IsUG ?? false) {
                                <span>UG</span>
                            }
                            else {
                                <span>PG</span>
                            }
                        </div>
                    </div>
                </Card>
            }
        }
        <Card>
            <div style='position: relative; width: 100%; height: 100%;' @onclick="Add">
                <h3 style='position: absolute; top: 40%; left: 50%; transform: translate(-50%, -50%)'>
                    <svg aria-hidden="true"
                         width="100px"
                         class="fa-9x fa-plus-circle fa-w-16 svg-inline--fa"
                         data-icon="plus-circle"
                         data-prefix="fal"
                         focusable="false"
                         role="img"
                         viewBox="0 0 512 512"
                         xmlns="http://www.w3.org/2000/svg">
                        <path class=""
                              d="M384 250v12c0 6.6-5.4 12-12 12h-98v98c0 6.6-5.4 12-12 12h-12c-6.6 0-12-5.4-12-12v-98h-98c-6.6 0-12-5.4-12-12v-12c0-6.6 5.4-12 12-12h98v-98c0-6.6 5.4-12 12-12h12c6.6 0 12 5.4 12 12v98h98c6.6 0 12 5.4 12 12zm120 6c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-32 0c0-119.9-97.3-216-216-216-119.9 0-216 97.3-216 216 0 119.9 97.3 216 216 216 119.9 0 216-97.3 216-216z"
                              fill="currentColor">
                        </path>
                    </svg><br/>
                    Add new?
                </h3>
            </div>
        </Card>
    </CardLayout>
</div>
<PromptPane Dismissible="true"
            Title="@_windowTitle"
            PrimaryText="Add"
            SecondaryText="Cancel"
            Visible="@_promptVisibility"
            OnClickPrimary="@Set"
            OnClickSecondary="@Hide">
    <br/>
    @if (_institution != null) {
        <div class="prompt">
            <div class="info-card">Enter the programme name here.</div>
            Programme Name: <input type="text" placeholder="Programme" @bind="programmeObject.programmeName"/> <br/>
            <div class="info-card">Enter a code to identify this programme.</div>
            Programme Code: <input type="text" placeholder="Programme Code" @bind="programmeObject.programmeCode"/> <br/>
            <div class="info-card">Enter the current semester.</div>
            Semester: <input type="text" placeholder="Semester" @bind="programmeObject.semesterNumber"/> <br/>
            <div class="info-card">Check this box if the programme is a UG programme.</div>
            <input type="radio" @bind="programmeObject.IsUG"/> UG
            <div class="info-card">Enter the number of hours the course is taken everyday.</div>
            Hours Everyday: <input type="text" placeholder="Hours Everyday" @bind="programmeObject.workingHoursPerDay"/> <br/>
            <div class="info-card">Enter the hours the course is taken on Saturdays.</div>
            Hours a Saturday: <input type="text" placeholder="Hours a Saturday" @bind="programmeObject.workingHoursPerSaturday"/> <br/>
            <div class="info-card">Enter the number of hours the course is taken in a week.</div>
            Hours a Week: <input type="text" placeholder="Hours a Week" @bind="programmeObject.workingHoursPerWeek"/> <br/>
            <div class="info-card">Total recommended hours of this course.</div>
            Total Hours: <input type="text" placeholder="Total Hours" @bind="programmeObject.totalWorkingHours"/> <br/>
            <div class="info-card">Total students attempting the course.</div>
            Strength: <input type="text" placeholder="Student Strength" @bind="programmeObject.studentStrength"/> <br/>
        </div>
    }
</PromptPane>

@code{

    private Session _session;
    private Institution _institution;
    private List<Programme> _programmes;
    private Programme programmeObject;
    private string _windowTitle = "Add Programme";

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            _session ??= SessionManager.GetSession(await LocalStorage.GetItemAsync<string>(Constants.SessionId));
            if (_session is null) NavigationManager.NavigateTo("/");
            else {
                _institution = InstitutionManager.GetInstitution(_session.InstitutionId);
                _programmes = await _institution.GetProgrammes();
                programmeObject = new Programme();
            }
            StateHasChanged();
        }
    }

    private bool _promptVisibility;

    private void Add() {
        programmeObject = new Programme();
        _promptVisibility = true;
    }

    private async Task Update() {
        _programmes = await _institution.GetProgrammes();
        StateHasChanged();
    }

    private void Hide() {
        _promptVisibility = false;
    }

    private async Task Set() {
        await ProgrammeApi.Add(_session.InstitutionId, programmeObject);
        _windowTitle = "Add Programme";
        _promptVisibility = false;
        await Update();
    }

    private void EditWindow(Programme programme) {
        programmeObject = programme;
        _windowTitle = $"Edit Programme: {programme.programmeName}";
        _promptVisibility = true;
    }

}