@using FWASWebApp.Services
@using FWASWebApp.Shared.NavMenus
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager Manager;

@if (_session is null) {
    <LoggedOutNavMenu OnSessionChanged="@SessionChanged"/>
} else {
    if (_session.userType == UserType.institution) {
        <InstitutionLoginNavMenu Session="@_session" OnSessionChanged="@SessionChanged"/>
    }
    else {
        <UserLoginNavMenu Session="@_session" OnSessionChanged="@SessionChanged"/>
    }
}

@code {

    private Session _session;

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            _session ??= SessionManager.GetSession(await LocalStorage.GetItemAsync<string>(Constants.SessionId));
            StateHasChanged();
        }
    }
    
    private void SessionChanged(Session newSession) {
        _session = newSession;
        if (newSession is null) return;
        if (string.IsNullOrEmpty(_session?.Id)) return;
    }

}